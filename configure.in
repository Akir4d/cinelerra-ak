AC_INIT(Cinelerra, 1.1.7)

AC_CANONICAL_SYSTEM

# Test for minimal version of autoconf
AC_PREREQ(2.57)

# Test for minimal versions of and automake

if test `automake --version | grep "automake (GNU automake)" | cut -b 25-27` = "1.7"; then
	echo "Checking for automake 1.7 ... found"
else
	echo "Checking for automake 1.7 ... not found"
	echo "You are using a version of automake older than 1.7. That will not work."
	echo " See README.BUILD for further instructions"
	exit
fi

AM_INIT_AUTOMAKE
AM_CONFIG_HEADER(config.h)
AM_GNU_GETTEXT([external])
AM_GNU_GETTEXT_VERSION(0.11.5)

AC_LANG_CPLUSPLUS
AC_LANG_C
AC_PROG_CXX

AC_ENABLE_SHARED
AC_ENABLE_STATIC

AC_PROG_LIBTOOL

# hack for libtool 1.5 -- this is ugly and probably wrong, but works
if test `libtool --version | grep ltmain.sh | cut -b 25-27` = "1.5"; then
   LTC_FLAGS="--tag=CC"
   LTCXX_FLAGS="--tag=CXX"
fi
AC_SUBST(LTC_FLAGS)
AC_SUBST(LTCXX_FLAGS)


# hack for using nasm for .S files
CCAS="\$(top_srcdir)/admin/nasm"
AC_SUBST(CCAS)
AC_SUBST(CCASFLAGS)


############## SPECIAL DIRECTORIES
AC_ARG_WITH(plugindir,
						AC_HELP_STRING([--with-plugindir], [sets the directory where the plugins should be installed]),
						[ plugindir=$withval ],
						[ plugindir="\${exec_prefix}/lib/cinelerra" ])
AC_SUBST(plugindir)

AC_ARG_WITH(fontsdir,
						AC_HELP_STRING([--with-fontsdir], [sets the directory where the fonts should be installed]),
						[ fontsdir=$withval ],
						[ fontsdir="\${plugindir}/fonts" ])
AC_SUBST(fontsdir)
############## END OF SPECIAL DIRECTORIES

############## XLIB
LDFLAGS="$LDFLAGS -L/usr/X11R6/lib"
AC_CHECK_HEADERS(X11/Xlib.h)
AC_CHECK_LIB(X11, XOpenDisplay, ,[
	echo "Xlib-dev was not found. In order to build Cinelerra,"
	echo "xlib-dev must be installed. Please install xlib-dev and"
	echo "run configure again."
	exit
	])
############## END XLIB

############## MISC LIBRARIES
AC_CHECK_HEADERS(uuid/uuid.h)
AC_CHECK_LIB(uuid, uuid_clear, ,[AC_MSG_NOTICE([libuuid not found])
	NOT_FOUND="$NOT_FOUND libuuid,"])

AM_PATH_GLIB(1.2.0)
AC_PATH_XTRA
############## END OF MISC LIBRARIES

LARGEFILE_CFLAGS="-D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64"
CFLAGS="-D_REENTRANT -DHAVE_LIBXXF86VM $LARGEFILE_CFLAGS $CFLAGS"
CXXFLAGS="-D_REENTRANT -DHAVE_LIBXXF86VM $LARGEFILE_CFLAGS $CXXFLAGS"

############## LAME
# Just test to see if we have lame installed.
AC_CHECK_HEADERS(lame/lame.h)
#AC_CHECK_LIB(-lmp3lame, lame_init, ,[AC_MSG_NOTICE([libmp3lame not found])
#	NOT_FOUND="$NOT_FOUND libmp3lame,"])
# END LAME

############## LIBSNDFILE
# Check the version of libsndfile and 
# set the compile flags accordingly
AC_CHECK_HEADER(sndfile.h, [ sndfile_found=yes ])

if test "x$sndfile_found" = "xyes"
then
	AC_CHECK_LIB(sndfile, sf_open_read, [sndfile_old=yes])
	if test "x$sndfile_old" = "xyes"
	then
		AC_MSG_NOTICE([Found old (< 1.0.0) version of libsndfile])
		CXXFLAGS="$CXXFLAGS -DHAVE_LIBSNDFILE_0"
	else
		AC_MSG_NOTICE([Found new (>= 1.0.0) version of libsndfile])
	fi
else
	AC_MSG_NOTICE([libsndfile not found])
	NOT_FOUND="$NOT_FOUND libsndfile,"
fi
# END LIBSNDFILE

############## LIBAVCODEC
AC_CHECK_HEADERS(ffmpeg/avcodec.h)
AC_CHECK_LIB(avcodec, avcodec_init, ,[AC_MSG_NOTICE([libavcodec not found])
	NOT_FOUND="$NOT_FOUND libavcodec"])
# END LIBAVCODEC

############## LIBXVIDCORE
AC_CHECK_HEADERS(xvid.h)
AC_CHECK_LIB(xvidcore, xvid_init, ,[AC_MSG_NOTICE([libxvidcore not found])
	NOT_FOUND="$NOT_FOUND libxvidcore,"])
# END LIBXVIDCORE

############## FIREWIRE
# firewire settings are propagated through FIREWIRE_CFLAGS and FIREWIRE_LDFLAGS
AC_ARG_ENABLE(firewire, 
							AC_HELP_STRING([--disable-firewire], [disable support for firewire (default=enabled)]),
							[ enable_firewire=$enableval ],
							[ enable_firewire=yes ])

if test "x$enable_firewire" = "xyes"; then
	AC_CHECK_LIB(raw1394, raw1394_new_handle, ,[AC_MSG_NOTICE([libraw1394 not found])
	NOT_FOUND="$NOT_FOUND libraw1394,"
	FIREWIRE="no"])

	AC_CHECK_LIB(avc1394, avc1394_send_command, ,[AC_MSG_NOTICE([libavc1394 not found])
	NOT_FOUND="$NOT_FOUND libavc1394,"
	FIREWIRE="no"])

	AC_CHECK_LIB(rom1394, rom1394_get_bus_id, ,[AC_MSG_NOTICE([librom1394 not found])
	NOT_FOUND="$NOT_FOUND librom1394,"
	FIREWIRE="no"])

	if test "$FIREWIRE" = "no"; then
		FIREWIRE_CFLAGS=""
		FIREWIRE_LDFLAGS=""
	else
		FIREWIRE_CFLAGS="-DHAVE_FIREWIRE -I/usr/include/libavc1394 -I/usr/include/libraw1394"
		FIREWIRE_LDFLAGS="-lraw1394 -lavc1394 -lrom1394"
	fi
fi
AC_SUBST(FIREWIRE_CFLAGS)
AC_SUBST(FIREWIRE_LDFLAGS)
############## END OF FIREWIRE

############## AVIFILE SUPPORT
dnl if test "x$enable_avifile" = "xyes"; then
dnl 	AM_PATH_AVIFILE(0.7.0)
dnl 	if test "x$HAVE_AVIFILE" = "xyes"; then
dnl 		AVIFILE_CXXFLAGS="-DUSE_AVIFILE $AVIFILE_CXXFLAGS"
dnl 	fi
dnl fi
dnl AC_ARG_ENABLE(avifile, [  --enable-avifile	enable support for avifile [default=no]])
############## END OF AVIFILE SUPPORT

############# CSS SUPPORT IN LIBMPEG3
if test "x$enable_css" = "xyes"; then
	CSS_CFLAGS="-DHAVE_CSS"
fi
AC_SUBST(CSS_CFLAGS)
AC_ARG_ENABLE(css, 
							AC_HELP_STRING([--disable-css], [disable support for css in libmpeg3 (default=enabled)]),,
							[ enable_css=$enableval ],
							[ enable_css=yes ])
############## END OF CSS SUPPORT IN LIBMPEG3


############## SOUND
# the sound options are propagated by SOUND_CFLAGS and SOUND_LDFLAGS
AC_ARG_ENABLE(oss, 
							AC_HELP_STRING([--disable-oss], [disable support for oss (default=enabled)]))
AC_ARG_ENABLE(alsa, 
							AC_HELP_STRING([--enable-alsa], [enable support for alsa (default=autodetect)]),
							[ enable_alsa=$enableval ],
							[ enable_alsa=default ])
AC_ARG_ENABLE(esd, 
							AC_HELP_STRING([--disable-esound], [disable support for esound (default=enabled)]))

if test "x$enable_oss" = "xyes" || test "x$enable_oss" = "x"; then
	SOUND_CFLAGS="-DHAVE_OSS $SOUND_CFLAGS"
fi
if test "x$enable_alsa" = "xdefault" || test "x$enable_alsa" = "xyes"; then
	AM_PATH_ALSA(0.9.0,
		[ SOUND_CFLAGS="$ALSA_CFLAGS -DHAVE_ALSA $SOUND_CFLAGS"
		SOUND_LDFLAGS="$ALSA_LIBS $SOUND_LDFLAGS" ],
		[ if test "x$enable_alsa" = "xyes"; then
		 		AC_MSG_NOTICE( [ alsa library >= 0.9.0 not found ] )
				NOT_FOUND="$NOT_FOUND alsa library >= 0.9.0,"
			fi ])
fi

if test "x$enable_esd" = "xyes" || test "x$enable_esd" = "x"; then
	AM_PATH_ESD
	SOUND_CFLAGS="$ESD_CFLAGS -DHAVE_ESOUND $SOUND_CFLAGS"
	SOUND_LDFLAGS="$ESD_LIBS $SOUND_LDFLAGS"
fi
AC_SUBST(SOUND_CFLAGS)
AC_SUBST(SOUND_LDFLAGS)
############### END OF SOUND

# MPEG2ENC declarations
have_asm_mmx=false
have_asm_sse=false
have_asm_nasm=false
have_x86cpu=false

############## MMX / 3DNOW

AC_ARG_ENABLE(x86, 
							AC_HELP_STRING([--enable-x86], [enables x86 specific features autodetection in libmpeg3 and mpeg2enc (default is disabled)]),
							[ enable_x86=$enableval ],
							[ enable_x86=no ])
AC_ARG_ENABLE(mmx, 
							AC_HELP_STRING([--enable-mmx], [enables support for mmx (default is disabled)]), 
							[ enable_mmx=$enableval ],
							[ enable_mmx=no ])
AC_ARG_ENABLE(3dnow, 
							AC_HELP_STRING([--enable-3dnow], [enables support for 3dnow (default is disabled)]),
							[ enable_3dnow=$enableval ],
							[ enable_3dnow=no ])
if test "x$enable_x86" = "xyes"; then
	CPU_CFLAGS="-DX86_CPU $CPU_CFLAGS"
	have_x86cpu=true
fi

if test "x$enable_mmx" = "xyes"; then
	CPU_CFLAGS="-DHAVE_MMX -DMMX -DUSE_MMX $CPU_CFLAGS" # -D_MMX_ doesn't work
	have_asm_mmx=true
fi
AM_CONDITIONAL(USEMMX, test "x$enable_mmx" = "xyes")

if test "x$enable_3dnow" = "xyes"; then
	CPU_CFLAGS="-DHAVE_3Dnow $CPU_CFLAGS" # -DUSE_3DNOW --> don't use, not compiling
fi
AM_CONDITIONAL(USE3DNOW, test "x$enable_3dnow" = "xyes")
AC_SUBST(LIBDECORE_LIBADD)
AC_SUBST(CPU_CFLAGS)
############## END OF MMX / 3DNOW

############## FFMPEG
dnl AM_CONDITIONAL(FFMPEG_AC3, true)
dnl AM_CONDITIONAL(FFMPEG_A52BIN, false)
dnl AM_CONDITIONAL(FFMPEG_MP3LAME, true)
dnl AM_CONDITIONAL(FFMPEG_VORBIS, true)
dnl AM_CONDITIONAL(FFMPEG_HAVE_MLIB, false)
dnl AM_CONDITIONAL(FFMPEG_TARGET_ARCH_ARMV4L, false)
dnl AM_CONDITIONAL(FFMPEG_TARGET_ARCH_ALPHA, false)
dnl AM_CONDITIONAL(FFMPEG_TARGET_ARCH_POWERPC, false)
dnl AM_CONDITIONAL(FFMPEG_TARGET_MMI, false)
dnl AM_CONDITIONAL(FFMPEG_TARGET_ALTIVEC, false)
dnl 
LIBAVCODEC_CFLAGS=-I/usr/include/ffmpeg
LIBAVCODEC_LIBS=-lavcodec
AC_SUBST(LIBAVCODEC_CFLAGS)
AC_SUBST(LIBAVCODEC_LIBS)

############## END OF FFMPEG

AC_OUTPUT(Makefile po/Makefile.in \
					libmpeg3/Makefile libmpeg3/video/Makefile libmpeg3/audio/Makefile \
					quicktime/Makefile quicktime/encore50/Makefile quicktime/decore50/Makefile \
					mpeg2enc/Makefile toolame-02l/Makefile\
					guicast/Makefile cinelerra/Makefile \
					mplexhi/Makefile mplexlo/Makefile \
					plugins/Makefile plugins/1080to480/Makefile \
					plugins/histogram/Makefile \
					plugins/720to480/Makefile \
					plugins/blurzoom/Makefile \
					plugins/denoisemjpeg/Makefile \
					plugins/graphic/Makefile \
					plugins/interpolate/Makefile \
					plugins/motion/Makefile \
					plugins/quark/Makefile \
					plugins/bandslide/Makefile \
					plugins/libcolors/Makefile \
					plugins/libfourier/Makefile \
					plugins/libeffecttv/Makefile \
					plugins/bandwipe/Makefile plugins/blur/Makefile plugins/brightness/Makefile \
					plugins/burn/Makefile plugins/parametric/Makefile plugins/aging/Makefile \
					plugins/cdripper/Makefile plugins/chromakey/Makefile plugins/colorbalance/Makefile \
					plugins/compressor/Makefile plugins/crossfade/Makefile plugins/defaulttheme/Makefile \
					plugins/deinterlace/Makefile plugins/delayaudio/Makefile plugins/delayvideo/Makefile \
					plugins/denoise/Makefile plugins/denoisefft/Makefile plugins/denoisevideo/Makefile \
					plugins/despike/Makefile plugins/dissolve/Makefile plugins/dot/Makefile \
					plugins/fieldframe/Makefile plugins/flip/Makefile plugins/framefield/Makefile \
					plugins/freeverb/Makefile plugins/freezeframe/Makefile plugins/gain/Makefile \
					plugins/holo/Makefile plugins/huesaturation/Makefile plugins/interpolateall/Makefile \
					plugins/invertaudio/Makefile plugins/invertvideo/Makefile plugins/irissquare/Makefile \
					plugins/ivtc/Makefile plugins/normalize/Makefile \
					plugins/oilpainting/Makefile plugins/pitch/Makefile plugins/polar/Makefile \
					plugins/reframe/Makefile plugins/resample/Makefile plugins/reverb/Makefile \
					plugins/reverseaudio/Makefile plugins/reversevideo/Makefile plugins/rgb601/Makefile \
					plugins/rotate/Makefile plugins/scale/Makefile plugins/sharpen/Makefile \
					plugins/shiftinterlace/Makefile plugins/slide/Makefile plugins/spectrogram/Makefile \
					plugins/swapchannels/Makefile plugins/synthesizer/Makefile plugins/timeavg/Makefile \
					plugins/timestretch/Makefile plugins/titler/Makefile plugins/translate/Makefile \
					plugins/videoscope/Makefile plugins/wave/Makefile plugins/whirl/Makefile \
					plugins/wipe/Makefile plugins/yuv/Makefile plugins/microtheme/Makefile \
					plugins/downsample/Makefile plugins/flash/Makefile plugins/gradient/Makefile \
					plugins/level/Makefile plugins/linearblur/Makefile \
					plugins/perspective/Makefile plugins/radialblur/Makefile plugins/zoomblur/Makefile \
					plugins/svg/Makefile plugins/fonts/Makefile)

if test "$NOT_FOUND" = ""; then
	AC_MSG_NOTICE([Configure found all libraries successfully.])
else
	AC_MSG_NOTICE([Configure could not find$NOT_FOUND compilation may fail!])
fi
