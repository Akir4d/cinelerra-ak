AC_INIT(Cinelerra, 2.0)

AC_CANONICAL_SYSTEM

# Test for minimal version of autoconf
AC_PREREQ(2.57)

AM_INIT_AUTOMAKE
AC_CONFIG_HEADER(config.h)
AM_GNU_GETTEXT([external])
AM_GNU_GETTEXT_VERSION(0.12.1)

AC_LANG_CPLUSPLUS
AC_LANG_C
AC_PROG_CXX

AC_ENABLE_SHARED
AC_DISABLE_STATIC
AC_PROG_LIBTOOL

# hack for libtool 1.5 -- this is ugly and probably wrong, but works
if test `libtool --version | grep ltmain.sh | cut -b 25-27` = "1.5"; then
   LTC_FLAGS="--tag=CC"
   LTCXX_FLAGS="--tag=CXX"
fi
AC_SUBST(LTC_FLAGS)
AC_SUBST(LTCXX_FLAGS)


# hack for using nasm for .S files
CCAS="\$(top_srcdir)/admin/nasm"
AC_SUBST(CCAS)
AC_SUBST(CCASFLAGS)

dnl Check for Video4Linux2
AH_TEMPLATE(HAVE_VIDEO4LINUX2, [Define to 1 if Video4Linux2 is available.])
AC_CHECK_HEADER([linux/videodev2.h], 
	[AC_CHECK_MEMBER(struct v4l2_buffer.index, [AC_DEFINE(HAVE_VIDEO4LINUX2)], [],
  		[#include <linux/time.h>])],
	[],[#include <linux/time.h>] )

############## SPECIAL DIRECTORIES
AC_ARG_WITH(plugindir,
						AC_HELP_STRING([--with-plugindir], [sets the directory where the plugins should be installed]),
						[ plugindir=$withval ],
						[ plugindir="\${exec_prefix}/lib/cinelerra" ])
AC_SUBST(plugindir)

AC_ARG_WITH(fontsdir,
						AC_HELP_STRING([--with-fontsdir], [sets the directory where the fonts should be installed]),
						[ fontsdir=$withval ],
						[ fontsdir="\${plugindir}/fonts" ])
AC_SUBST(fontsdir)
############## END OF SPECIAL DIRECTORIES

############## XLIB
AC_PATH_XTRA
if test "$no_x" = yes; then
  if test "x$have_x" = "xdisabled"; then
    AC_MSG_WARN([Do not use --without-x or --with-x=no.])
  else
    AC_MSG_WARN([X Windows development tools were not found.])
    AC_MSG_WARN([Please install xlib-dev or xorg-x11-devel.])
  fi
  AC_MSG_ERROR([Cinelerra requires X Windows.])
fi
AH_TEMPLATE(HAVE_LIBXXF86VM, [Define to 1 if libXxf86vm is available.])
AC_DEFINE(HAVE_LIBXXF86VM)
############## END XLIB

############## SOUND
# the sound options are propagated by SOUND_CFLAGS and SOUND_LDFLAGS
AC_ARG_ENABLE(oss, 
							AC_HELP_STRING([--disable-oss], [disable support for oss (default=enabled)]))
AC_ARG_ENABLE(alsa, 
							AC_HELP_STRING([--enable-alsa], [enable support for alsa (default=autodetect)]),
							[ enable_alsa=$enableval ],
							[ enable_alsa=default ])
AC_ARG_ENABLE(esd, 
							AC_HELP_STRING([--disable-esound], [disable support for esound (default=enabled)]))

if test "x$enable_oss" = "xyes" || test "x$enable_oss" = "x"; then
	SOUND_CFLAGS="-DHAVE_OSS $SOUND_CFLAGS"
fi
if test "x$enable_alsa" = "xdefault" || test "x$enable_alsa" = "xyes"; then
	AM_PATH_ALSA(1.0.2,
		[ SOUND_CFLAGS="$ALSA_CFLAGS -DHAVE_ALSA $SOUND_CFLAGS"
		SOUND_LDFLAGS="$ALSA_LIBS $SOUND_LDFLAGS" ],
		[ if test "x$enable_alsa" = "xyes"; then
		 		AC_MSG_WARN([alsa library >= 1.0.2 not found])
				NOT_FOUND="$NOT_FOUND alsa,library,>=,1.0.2"
			fi ])
	dnl This added -lasound to LIBS. LIBS is used in every link command.
	dnl But we do not want to link all shared libraries against -lasound.
	dnl So we remove it again.
	LIBS=`echo "$LIBS" | sed -e s/-lasound//g`
fi

if test "x$enable_esd" = "xyes" || test "x$enable_esd" = "x"; then
	AM_PATH_ESD
	SOUND_CFLAGS="$ESD_CFLAGS -DHAVE_ESOUND $SOUND_CFLAGS"
	SOUND_LDFLAGS="$ESD_LIBS $SOUND_LDFLAGS"
fi
AC_SUBST(SOUND_CFLAGS)
AC_SUBST(SOUND_LDFLAGS)
############### END OF SOUND

############## MJPEGTOOLS (for YUV4MPEG)
PKG_CHECK_MODULES(MJPEG, mjpegtools)
AC_SUBST(MJPEG_CFLAGS)
AC_SUBST(MJPEG_LIBS)
# check if mjpegtools has 3 arguements for y4m_write_frame_header
# Note: this test came from transcode...
save_CFLAGS="$CFLAGS"
save_LIBS="$LIBS"
CFLAGS="$CFLAGS $MJPEG_CFLAGS"
LIBS="$LIBS $MJPEG_LIBS"
AC_TRY_LINK(
[
#include <mjpegtools/yuv4mpeg.h>
#include <mjpegtools/mpegconsts.h>
],
[y4m_write_frame_header(1,NULL,NULL)],
[
AC_DEFINE(
	   [MJPEGTOOLS_Y4M_WRITE_FRAME_HEADER__3ARGS], 
           [1], 
           [using mjpegtool's y4m_write_frame_header with 3 arguments]
          )
mjpeg_version_info="3 arguments (new versions)"
],[mjpeg_version_info="assuming 2 arguments (older versions)"])
AC_MSG_CHECKING([for number of arguments to mjpegtool's y4m_write_frame_header])
AC_MSG_RESULT($mjpeg_version_info)
CFLAGS="$save_CFLAGS"
LIBS="$save_LIBS"

############## END MJPEGTOOLS

############## MISC LIBRARIES
AC_CHECK_HEADERS(uuid/uuid.h)
AC_CHECK_LIB(uuid, uuid_clear, :,[AC_MSG_WARN([libuuid not found])
	NOT_FOUND="$NOT_FOUND libuuid"])

AC_CHECK_HEADERS(fftw3.h)
AC_CHECK_LIB(fftw3, fftw_free, :,[AC_MSG_WARN([libfftw3 not found])
	NOT_FOUND="$NOT_FOUND libfftw3"])
############## END OF MISC LIBRARIES

############## END OF MISC LIBRARIES

LARGEFILE_CFLAGS="-D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64"
AC_SUBST(LARGEFILE_CFLAGS)

############## A52DEC
AC_CHECK_LIB(a52, a52_init, 
    [AC_CHECK_HEADER(a52dec/a52.h, [HAVE_A52DEC=yes])],
    [AC_MSG_WARN([liba52 not found])])

if test "x$HAVE_A52DEC" = xyes; then
    A52DEC_CFLAGS=
    A52DEC_LIBS=-la52
else
    NOT_FOUND="$NOT_FOUND a52dec"
fi
AC_SUBST(A52DEC_CFLAGS)
AC_SUBST(A52DEC_LDFLAGS)
############## END OF A52DEC

############## LAME
# Just test to see if we have lame installed.
AC_CHECK_HEADERS(lame/lame.h)
#AC_CHECK_LIB(mp3lame, lame_init, :,[AC_MSG_WARN([libmp3lame not found])
#	NOT_FOUND="$NOT_FOUND libmp3lame"])
# END LAME

############## LIBSNDFILE
AC_CHECK_LIB(sndfile, sf_open, 
    [AC_CHECK_HEADERS(sndfile.h, [HAVE_SNDFILE=yes])],[AC_MSG_WARN([libsndfile not found])])
if test "x$HAVE_SNDFILE" = xyes; then :; else
    NOT_FOUND="$NOT_FOUND libsndfile"
fi
############## END OF LIBSNDFILE

############## OpenEXR
PKG_CHECK_MODULES(OPENEXR, OpenEXR)
AC_SUBST(OPENEXR_CFLAGS)
AC_SUBST(OPENEXR_LIBS)
############## END OF OpenEXR

############## LIBFAAD
AC_CHECK_LIB(faad, faacDecInit, 
    [AC_CHECK_HEADER(faad.h, [HAVE_FAAD=yes])],
    [AC_CHECK_LIB(faad, NeAACDecInit, [AC_CHECK_HEADER(faad.h, [HAVE_FAAD=yes])],[AC_MSG_WARN([libfaad not found])])])
if test "x$HAVE_FAAD" = xyes; then
    FAAD_CFLAGS=
    FAAD_LIBS="-lfaad"
else
	NOT_FOUND="$NOT_FOUND libfaad,2"
fi
AC_SUBST(FAAD_CFLAGS)
AC_SUBST(FAAD_LIBS)
############## END OF LIBFAAD

############## FIREWIRE
# firewire settings are propagated through FIREWIRE_CFLAGS and FIREWIRE_LDFLAGS
AC_ARG_ENABLE(firewire, 
							AC_HELP_STRING([--disable-firewire], [disable support for firewire (default=enabled)]),
							[ enable_firewire=$enableval ],
							[ enable_firewire=yes ])

if test "x$enable_firewire" = "xyes"; then
	AC_CHECK_LIB(raw1394, raw1394_new_handle, :,[AC_MSG_WARN([libraw1394 not found])
	NOT_FOUND="$NOT_FOUND libraw1394"
	FIREWIRE="no"])

	AC_CHECK_LIB(avc1394, avc1394_send_command, :,[AC_MSG_WARN([libavc1394 not found])
	NOT_FOUND="$NOT_FOUND libavc1394"
	FIREWIRE="no"],-lraw1394)

	AC_CHECK_LIB(rom1394, rom1394_get_bus_id, :,[AC_MSG_WARN([librom1394 not found])
	NOT_FOUND="$NOT_FOUND librom1394"
	FIREWIRE="no"],-lraw1394)

	if test "$FIREWIRE" = "no"; then
		FIREWIRE_CFLAGS=""
		FIREWIRE_LDFLAGS=""
	else
		FIREWIRE_CFLAGS="-DHAVE_FIREWIRE"
		FIREWIRE_LDFLAGS="-lavc1394 -lrom1394 -lraw1394"
	fi
fi
AC_SUBST(FIREWIRE_CFLAGS)
AC_SUBST(FIREWIRE_LDFLAGS)
############## END OF FIREWIRE

############## AVIFILE SUPPORT
dnl if test "x$enable_avifile" = "xyes"; then
dnl 	AM_PATH_AVIFILE(0.7.0)
dnl 	if test "x$HAVE_AVIFILE" = "xyes"; then
dnl 		AVIFILE_CXXFLAGS="-DUSE_AVIFILE $AVIFILE_CXXFLAGS"
dnl 	fi
dnl fi
dnl AC_ARG_ENABLE(avifile, [  --enable-avifile	enable support for avifile [default=no]])
############## END OF AVIFILE SUPPORT

############# CSS SUPPORT IN LIBMPEG3
if test "x$enable_css" = "xyes"; then
	CSS_CFLAGS="-DHAVE_CSS"
fi
AC_SUBST(CSS_CFLAGS)
AC_ARG_ENABLE(css, 
							AC_HELP_STRING([--disable-css], [disable support for css in libmpeg3 (default=enabled)]),,
							[ enable_css=$enableval ],
							[ enable_css=yes ])
############## END OF CSS SUPPORT IN LIBMPEG3


# MPEG2ENC declarations
have_asm_mmx=false
have_asm_sse=false
have_asm_nasm=false
have_x86cpu=false

############## MMX / 3DNOW  POWERPC / ALTIVEC

AC_ARG_ENABLE(arch,
	AC_HELP_STRING([--enable-arch=arch], [use ppc or x86 as args, using x86 is the same as use --enable-x86 --enable-mmx]),
		[ enable_arch=$enablevel ],
		[ enable_arch=x86 ])

AC_ARG_ENABLE(x86, 
							AC_HELP_STRING([--enable-x86], [enables x86 specific features autodetection in libmpeg3 and mpeg2enc (default is disabled)]),
							[ enable_x86=$enableval ],
							[ enable_x86=no ])
AC_ARG_ENABLE(mmx, 
							AC_HELP_STRING([--enable-mmx], [enables support for mmx (default is disabled)]), 
							[ enable_mmx=$enableval ],
							[ enable_mmx=no ])
AC_ARG_ENABLE(3dnow, 
							AC_HELP_STRING([--enable-3dnow], [enables support for 3dnow (default is disabled)]),
							[ enable_3dnow=$enableval ],
							[ enable_3dnow=no ])

AC_ARG_ENABLE(powerpc, 
		AC_HELP_STRING([--enable-powerpc], [enables powerpc support in ffmpeg (default is disabled)]),
		[ enable_powerpc=$enableval ],
		[ enable_powerpc=no ])

AC_ARG_ENABLE(altivec, 
		AC_HELP_STRING([--enable-altivec], [enables altivec support (default is disabled)]),
		[ enable_altivec=$enableval ],
		[ enable_altivec=no ])

if test "x$enable_spefarch" = "xx86"; then
	enable_x86=yes
	enable_mmx=yes
elif test "x$enable_spefarch" = "xpowerpc"; then
	enable_powerpc=yes
fi

if test "x$enable_x86" = "xyes"; then
	CPU_CFLAGS="-DX86_CPU $CPU_CFLAGS"
	have_x86cpu=true

	if test "x$enable_mmx" = "xyes"; then
	CPU_CFLAGS="-DHAVE_MMX -DMMX -DUSE_MMX $CPU_CFLAGS" # -D_MMX_ doesn't work
	have_asm_mmx=true
	fi
	if test "x$enable_3dnow" = "xyes"; then
		CPU_CFLAGS="-DHAVE_3Dnow $CPU_CFLAGS" # -DUSE_3DNOW --> don't use, not compilin
	fi
	enable_powerpc=no
	enable_altivec=no
else
	enable_mmx=no
	enable_3dnow=no
fi

if test "x$enable_powerpc" = "xyes"; then
	CPU_CFLAGS=""
	if test "x$enable_altivec" = "xyes"; then
	CPU_CFLAGS=""
	fi
	enable_x86=no
	enable_mmx=no
	enable_3dnow=no
else
	enable_altivec=no
fi

AM_CONDITIONAL(USEMMX, test "x$enable_mmx" = "xyes")
AM_CONDITIONAL(TARGET_BUILTIN_VECTOR,test "x$enable_mmx" = "xyes")
AM_CONDITIONAL(USE3DNOW, test "x$enable_3dnow" = "xyes")
AM_CONDITIONAL(TARGET_ARCH_POWERPC, test "x$enable_powerpc" = "xyes")
AM_CONDITIONAL(TARGET_ALTIVEC, test "x$enable_altivec" = "xyes")
AC_SUBST(LIBDECORE_LIBADD)
AC_SUBST(CPU_CFLAGS)


############## END OF MMX / 3DNOW

############## XIPH
PKG_CHECK_MODULES(XIPH,ogg >= 1.1 vorbis vorbisenc vorbisfile theora)
AC_SUBST(XIPH_CFLAGS)
AC_SUBST(XIPH_LIBS)

PKG_CHECK_MODULES(VORBIS,ogg >= 1.1 vorbis vorbisenc vorbisfile)
AC_SUBST(VORBIS_CFLAGS)
AC_SUBST(VORBIS_LIBS)
############## END OF XIPH

############## .png TO .o CONVERSION

AC_CHECK_TOOL(OBJCOPY, objcopy)
if test "x$OBJCOPY" = "x"; then
	AC_MSG_ERROR("objcopy from GNU binutils >= 2.11.90 not found")
fi
AC_CHECK_TOOL(OBJDUMP, objdump)
dnl extract target and architecture if objdump was found
if test "x$OBJDUMP" = "x"; then :; else
  AC_MSG_CHECKING(for object target)
  octarget=`$OBJDUMP --info | sed -ne '2p'` # extract first target
  AC_MSG_RESULT($octarget)
  AC_MSG_CHECKING(for object architecture)
  ocarch=`$OBJDUMP --info | sed -ne '4p'` # extract corresponding arch
  AC_MSG_RESULT($ocarch)
fi
AC_SUBST(OBJCOPYTARGET, $octarget)
AC_SUBST(OBJCOPYARCH, $ocarch)

############## END of .png TO .o CONVERSION

AC_OUTPUT(Makefile cinelerra-cvs-current.spec po/Makefile.in \
	m4/Makefile \
					libmpeg3/Makefile libmpeg3/video/Makefile libmpeg3/audio/Makefile \
					quicktime/Makefile \
					quicktime/encore50/Makefile \
	quicktime/ffmpeg/Makefile \
	quicktime/ffmpeg/libavcodec/Makefile \
	quicktime/ffmpeg/libavcodec/i386/Makefile \
					mpeg2enc/Makefile toolame-02l/Makefile \
					guicast/Makefile cinelerra/Makefile \
	cinelerra/data/Makefile \
	mplexlo/Makefile \
					plugins/colors/Makefile \
					plugins/libfourier/Makefile \
					plugins/libeffecttv/Makefile \
					plugins/Makefile plugins/1080to480/Makefile \
					plugins/histogram/Makefile \
					plugins/720to480/Makefile \
					plugins/denoisemjpeg/Makefile \
					plugins/motion/Makefile \
					plugins/bandslide/Makefile \
					plugins/bandwipe/Makefile plugins/blur/Makefile plugins/brightness/Makefile \
					plugins/burn/Makefile plugins/parametric/Makefile plugins/aging/Makefile \
					plugins/cdripper/Makefile plugins/chromakey/Makefile plugins/colorbalance/Makefile \
					plugins/compressor/Makefile \
					plugins/crossfade/Makefile \
					plugins/decimate/Makefile \
					plugins/deinterlace/Makefile plugins/delayaudio/Makefile plugins/delayvideo/Makefile \
					plugins/denoise/Makefile plugins/denoisefft/Makefile plugins/denoisevideo/Makefile \
					plugins/despike/Makefile plugins/dissolve/Makefile plugins/dot/Makefile \
					plugins/fieldframe/Makefile plugins/flip/Makefile plugins/framefield/Makefile \
					plugins/freeverb/Makefile plugins/freezeframe/Makefile plugins/gain/Makefile \
					plugins/holo/Makefile plugins/huesaturation/Makefile \
					plugins/interpolateaudio/Makefile \
					plugins/interpolatevideo/Makefile \
					plugins/invertaudio/Makefile plugins/invertvideo/Makefile plugins/irissquare/Makefile \
					plugins/ivtc/Makefile \
					plugins/linearize/Makefile \
					plugins/loopaudio/Makefile \
					plugins/loopvideo/Makefile \
					plugins/normalize/Makefile \
					plugins/oilpainting/Makefile \
					plugins/overlay/Makefile \
					plugins/pitch/Makefile \
					plugins/polar/Makefile \
					plugins/reframert/Makefile
					plugins/reframe/Makefile plugins/resample/Makefile plugins/reverb/Makefile \
					plugins/reverseaudio/Makefile plugins/reversevideo/Makefile plugins/rgb601/Makefile \
					plugins/rotate/Makefile \
					plugins/scale/Makefile \
					plugins/seltempavg/Makefile \
					plugins/shapewipe/Makefile \
					plugins/sharpen/Makefile \
					plugins/shiftinterlace/Makefile plugins/slide/Makefile plugins/spectrogram/Makefile \
	plugins/suv/Makefile \
	plugins/suv/data/Makefile \
					plugins/swapchannels/Makefile \
					plugins/synthesizer/Makefile \
					plugins/threshold/Makefile \
					plugins/timeavg/Makefile \
					plugins/timestretch/Makefile plugins/titler/Makefile plugins/translate/Makefile \
					plugins/unsharp/Makefile \
					plugins/videoscope/Makefile plugins/wave/Makefile plugins/whirl/Makefile \
					plugins/wipe/Makefile \
					plugins/yuv/Makefile \
					plugins/downsample/Makefile plugins/flash/Makefile plugins/gradient/Makefile \
					plugins/level/Makefile plugins/linearblur/Makefile \
					plugins/perspective/Makefile plugins/radialblur/Makefile plugins/zoomblur/Makefile \
					plugins/svg/Makefile \
					plugins/diffkey/Makefile \
					plugins/fonts/Makefile \
					image/Makefile)

if test "$NOT_FOUND" = ""; then
	AC_MSG_NOTICE([All required libraries were found.])
else
	AC_MSG_WARN([The following libraries were not found:])
	for i in $NOT_FOUND; do
		l=`echo $i | sed -e 's/,/ /'`
		AC_MSG_WARN([	$l])
	done
	AC_MSG_WARN([Compilation may fail! Remember, you need the developer])
	AC_MSG_WARN([packages too, not just the runtime libraries!])
	AC_MSG_WARN([])
	case $NOT_FOUND in
	*OpenEXR*)
	  AC_MSG_WARN([Use ./configure OPENEXR=/path/to/OpenEXR to specify])
	  AC_MSG_WARN([the directory that contains the OpenEXR include files])
	  AC_MSG_WARN([(default is \$prefix/include/OpenEXR).]) ;;
	*mjpeg*)
          AC_MSG_WARN([mjpegtools is needed for YUV4MPEG export to tools])
	  AC_MSG_WARN([like mpeg2enc.  See http://mjpeg.sourceforge.net/]) ;;
	esac
fi
